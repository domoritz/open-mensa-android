buildscript {
    ext.kotlin_version = '1.8.10'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    google()
    mavenCentral()
}

dependencies {
    def room_version = "2.5.1"
    def lifecycle_version = "2.2.0"

    // compile fileTree(dir: 'libs', include: '*.jar')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "com.google.android.material:material:1.8.0"
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.osmdroid:osmdroid-android:6.1.0'
    implementation 'org.slf4j:slf4j-android:1.6.1-RC1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
}

tasks.whenTaskAdded { task ->
    if (task.name == 'validateReleaseSigning')
        task.dependsOn keystoreInfo
}

android {
    defaultConfig {
        versionCode 28
        versionName "1.0.6"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
            javacOptions {
                option("-Xmaxerrs", 500)
            }
        }
    }

    compileSdkVersion 33

    dataBinding {
        enabled = true
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }


    signingConfigs {
        release {
            storeFile file('android.keystore')
            storePassword ''
            keyAlias 'openmensa'
            keyPassword ''
        }

        buildTypes {
            release {
                debuggable false
                signingConfig signingConfigs.release
            }
            debug {
                applicationIdSuffix ".debug"
            }
        }
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
    }
}

/*
task keystoreInfo << {
    def console = System.console()
    if (console == null)
        throw new IllegalStateException('no console available, use --no-daemon flag')

    def storePassword = console.readPassword('Keystore password: ')
    def keyPassword = console.readPassword('Key password: ')

    android.signingConfigs.release.storePassword = new String(storePassword)
    android.signingConfigs.release.keyPassword = new String(keyPassword)
}
*/
